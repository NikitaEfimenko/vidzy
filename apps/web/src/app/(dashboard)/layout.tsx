
import "@/app/globals.css";
import type { Metadata } from "next";
import localFont from "next/font/local";


import { Providers } from "@/app/providers";

import { SidebarProvider, SidebarTrigger } from "@/shared/ui/sidebar";

import { Guard } from "@/shared/lib/sdk";
import { AppSidebar } from "@/shared/ui/app-sidebar";
import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
  BreadcrumbSeparator,
} from "@/shared/ui/breadcrumb";
import { Button } from "@/shared/ui/button";
import { Separator } from "@/shared/ui/separator";
import {
  SidebarInset
} from "@/shared/ui/sidebar";
import { Toaster } from "@/shared/ui/sonner";
import UserAvatar from "@/widgets/user-profile/ui";
import { Sparkle } from "lucide-react";
import Link from "next/link";
import { redirect } from "next/navigation";
import { auth } from "../config/auth";
import { ReactElement } from "react";
import { TaskManagerWidget } from "@/widgets/task-manager/ui";


const geistSans = localFont({
  src: "../fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "../fonts/GeistVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const expiredFallback = <div className="flex-1 h-full flex items-center justify-center">
  <Link href={`${process.env.PROCAT_ID_HOST!}/clients/to/${process.env.PROCAT_CLIENT_ID!}`}>
    <Button size="lg"><Sparkle />Upgrade subscription</Button>
  </Link>
</div>

const notAccessFallback = <div className="flex-1  h-full flex items-center justify-center">
  <Link href={`${process.env.PROCAT_ID_HOST!}/clients/to/${process.env.PROCAT_CLIENT_ID!}`}>
    <Button size="lg"><Sparkle />Get access</Button>
  </Link>
</div>

const sidebarAccessFallback = <Link href={`${process.env.PROCAT_ID_HOST!}/clients/to/${process.env.PROCAT_CLIENT_ID!}`}>
  <Button variant="outline" size="lg" className="w-full">
    <Sparkle />
    Upgrade to Pro
  </Button>
</Link>

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ slug: string }>,
}>) {

  const session = await auth()
  if (!session?.user) {
    redirect('/')
  }

  return (
    <html suppressHydrationWarning lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Providers>
          <SidebarProvider>
            <AppSidebar
              user={<UserAvatar />}
              // pro={<Guard level="Базовая подписка Vidzy"
              //   noAccessFallback={sidebarAccessFallback}
              //   expiredFallback={sidebarAccessFallback}
              // ></Guard>}
              pro={
                <Guard level="Pro подписка Vidzy"
                noAccessFallback={sidebarAccessFallback}
                expiredFallback={sidebarAccessFallback}
              ></Guard>
              }
            />
            <SidebarInset>
              <header className="flex h-16 shrink-0 items-center gap-2">
                <div className="flex items-center gap-2 px-4 w-full">
                  <SidebarTrigger className="-ml-1" />
                  <Separator orientation="vertical" className="mr-2 h-4" />
                  <Breadcrumb>
                    <BreadcrumbList>
                      <BreadcrumbItem className="hidden md:block">
                        <BreadcrumbLink href="/renderer">
                          Vidzy dashboard
                        </BreadcrumbLink>
                      </BreadcrumbItem>
                      <BreadcrumbSeparator className="hidden md:block" />
                      <BreadcrumbItem>
                        <BreadcrumbPage>Render</BreadcrumbPage>
                      </BreadcrumbItem>
                    </BreadcrumbList>
                  </Breadcrumb>
                </div>
                {session.user && <div className="ml-auto px-4">
                  <TaskManagerWidget userId={session.user.id}/>
                </div>}
              </header>
              <main className="w-full h-full">
                <Guard level="Базовая подписка Vidzy"
                  expiredFallback={expiredFallback}
                  noAccessFallback={notAccessFallback}
                >
                  <>
                    {children}
                  </>
                </Guard>
              </main>
              <Toaster />
            </SidebarInset>
          </SidebarProvider>
        </Providers>
      </body>
    </html>
  );
}
