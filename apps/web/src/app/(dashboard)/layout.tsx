
import type { Metadata } from "next";
import localFont from "next/font/local";
import "@/app/globals.css";


import { Providers } from "@/app/providers";

import { SidebarProvider, SidebarTrigger } from "@/shared/ui/sidebar";

import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
  BreadcrumbSeparator,
} from "@/shared/ui/breadcrumb";
import { Separator } from "@/shared/ui/separator";
import {
  SidebarInset
} from "@/shared/ui/sidebar";
import { AppSidebar } from "@/shared/ui/app-sidebar";
import { auth } from "../config/auth";
import { redirect } from "next/navigation";
import UserAvatar from "@/widgets/user-profile/ui";
import { Toaster } from "@/shared/ui/sonner"
import { fallbackConfig, Guard } from "@/shared/lib/sdk";
import Link from "next/link";
import { Button } from "@/shared/ui/button";
import { MdMoney } from "react-icons/md";
import { Sparkle, TimerOffIcon } from "lucide-react";


const geistSans = localFont({
  src: "../fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "../fonts/GeistVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const expiredFallback = <div className="flex-1 h-full flex items-center justify-center">
<Link href="/prices">
  <Button size="lg"><Sparkle />Upgrade subscription</Button>
</Link>
</div>

const notAccessFallback = <div className="flex-1  h-full flex items-center justify-center">
<Link href="/prices">
  <Button size="lg"><Sparkle />Get access</Button>
</Link>
</div>

const sidebarAccessFallback = <Link href='/prices'>
<Button variant="outline" size="lg" className="w-full">
  <Sparkle />
  Upgrade to Pro
</Button>
</Link>

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await auth()
  if (!session?.user) {
    redirect('/')
  }


  return (
    <html suppressHydrationWarning lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <SidebarProvider>
          <AppSidebar
            user={<UserAvatar />}
            pro={<Guard level="Procat - для создателей"
              noAccessFallback={sidebarAccessFallback}
              expiredFallback={sidebarAccessFallback}
            ></Guard>}
          />
          <SidebarInset>
            <header className="flex h-16 shrink-0 items-center gap-2">
              <div className="flex items-center gap-2 px-4">
                <SidebarTrigger className="-ml-1" />
                <Separator orientation="vertical" className="mr-2 h-4" />
                <Breadcrumb>
                  <BreadcrumbList>
                    <BreadcrumbItem className="hidden md:block">
                      <BreadcrumbLink href="#">
                        Upgrade Your Saas
                      </BreadcrumbLink>
                    </BreadcrumbItem>
                    <BreadcrumbSeparator className="hidden md:block" />
                    <BreadcrumbItem>
                      <BreadcrumbPage>Main</BreadcrumbPage>
                    </BreadcrumbItem>
                  </BreadcrumbList>
                </Breadcrumb>
              </div>
            </header>
            <Providers>
              <main>
                <div className="px-4">
                  {/* <Guard level="Procat - для создателей"
                    expiredFallback={expiredFallback}
                    noAccessFallback={notAccessFallback}
                  >
                    <>
                      {children}
                    </>
                  </Guard> */}
                  <>
                    {children}
                  </>
                </div>
              </main>
              <Toaster />
            </Providers>
          </SidebarInset>
        </SidebarProvider>
      </body>
    </html>
  );
}
